<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:property-placeholder
            location="classpath:env-aliyunConsole.properties"/>

    <!--动态选择数据源 -->
    <bean id="dataSource" class="org.multimediaprototype.common.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="r" value-ref="ds_r"/>
                <entry key="w" value-ref="ds_w"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="ds_r"/>
    </bean>
   
    <!--读 数据源 -->
    <bean id="ds_r" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" lazy-init="true">
        <property name="driverClassName" value="${jdbc1.driverClassName}"/>
        <property name="url" value="${jdbc1.url}"/>
        <property name="username" value="${jdbc1.username}"/>
        <property name="password" value="${jdbc1.password}"/>
        <property name="maxActive" value="${jdbc1.maxActive}"/>
        <property name="maxIdle" value="${jdbc1.maxIdle}"/>
        <property name="maxWait" value="${jdbc1.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc1.timeBetweenEvictionRunsMillis}"/>
        <property name="testWhileIdle" value="${jdbc1.testWhileIdle}"/>
        <property name="validationQuery" value="${jdbc1.validationQuery}"/>
    </bean>
    <!--写数据源 -->
    <bean id="ds_w" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" lazy-init="true">
        <property name="driverClassName" value="${jdbc1.driverClassName}"/>
        <property name="url" value="${jdbc1.url}"/>
        <property name="username" value="${jdbc1.username}"/>
        <property name="password" value="${jdbc1.password}"/>
        <property name="maxActive" value="${jdbc1.maxActive}"/>
        <property name="maxIdle" value="${jdbc1.maxIdle}"/>
        <property name="maxWait" value="${jdbc1.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc1.timeBetweenEvictionRunsMillis}"/>
        <property name="testWhileIdle" value="${jdbc1.testWhileIdle}"/>
        <property name="validationQuery" value="${jdbc1.validationQuery}"/>
    </bean>


    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:org/multimediaprototype/**/dao/*Mapper.xml"/>
        <property name="configLocation" value="classpath:config/mybatis-settings.xml"/>
    </bean>


    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.multimediaprototype.upload.dao.mapper,
		org.multimediaprototype.admin.dao,
		org.multimediaprototype.mts.dao,
        org.multimediaprototype.mts.dao.mapper,
		org.multimediaprototype.auth.dao,
		org.multimediaprototype.oss.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean name="ossClient" class="com.aliyun.oss.OSSClient">
        <constructor-arg name="endpoint" value="${aliyunConsole.ossEndpointHz}"/>
        <constructor-arg name="accessKeyId" value="${aliyunConsole.accesskeyId}"/>
        <constructor-arg name="secretAccessKey" value="${aliyunConsole.accesskeySecret}"/>
    </bean>
    
    


    <!-- JDBC模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


</beans>