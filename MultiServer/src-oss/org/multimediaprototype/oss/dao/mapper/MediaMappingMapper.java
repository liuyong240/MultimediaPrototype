package org.multimediaprototype.oss.dao.mapper;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.multimediaprototype.oss.dao.model.MediaMapping;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public interface MediaMappingMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mediamapping
     *
     * @mbggenerated Mon Nov 30 19:07:00 CST 2015
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mediamapping
     *
     * @mbggenerated Mon Nov 30 19:07:00 CST 2015
     */
    int insert(MediaMapping record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mediamapping
     *
     * @mbggenerated Mon Nov 30 19:07:00 CST 2015
     */
    int insertSelective(MediaMapping record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mediamapping
     *
     * @mbggenerated Mon Nov 30 19:07:00 CST 2015
     */
    MediaMapping selectByPrimaryKey(Long id);
    
    MediaMapping selectByMediaId(Long mediaId);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mediamapping
     *
     * @mbggenerated Mon Nov 30 19:07:00 CST 2015
     */
    int updateByPrimaryKeySelective(MediaMapping record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mediamapping
     *
     * @mbggenerated Mon Nov 30 19:07:00 CST 2015
     */
    int updateByPrimaryKey(MediaMapping record);


    List<MediaMapping> pagingQuery(
            @Param("start") Integer start,
            @Param("offset") Integer offset,
            @Param("status") Integer status);

    List<Map<String, Object>> paginQueryEx(
            @Param("start") Integer start,
            @Param("offset") Integer offset,
            @Param("status") Integer status,
            @Param("statusExclude") Integer statusExclude,
            @Param("userid") Long userid);

    Long count(
            @Param("status") Integer status,
            @Param("statusExclude") Integer statusExclude,
            @Param("userid") Long userid);

}